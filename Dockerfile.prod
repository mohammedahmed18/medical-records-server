FROM ubuntu:20.04

WORKDIR /medical-records-server

ARG DEBIAN_FRONTEND=noninteractive

ENV PG_VERSION=15

# install some apt packages
RUN apt-get update \
    && apt-get upgrade --yes \
    && apt-get install --no-install-recommends --yes wget curl


# install postgres & redis
RUN apt-get install -y gnupg2 lsb-release redis-server \
    && sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list' \ 
    && wget --no-check-certificate --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
    && apt update \
    && apt-get install -y --no-install-recommends postgresql-${PG_VERSION} \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*


#Install node js via nvm
ENV NODE_VERSION=14.20.1
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
ENV NVM_DIR=/root/.nvm
RUN . "$NVM_DIR/nvm.sh" && nvm install ${NODE_VERSION}
RUN . "$NVM_DIR/nvm.sh" && nvm use v${NODE_VERSION}
RUN . "$NVM_DIR/nvm.sh" && nvm alias default v${NODE_VERSION}
ENV PATH="/root/.nvm/versions/node/v${NODE_VERSION}/bin/:${PATH}"


# Configure PostgreSQL
RUN echo "host all all 0.0.0.0/0 trust" >> /etc/postgresql/${PG_VERSION}/main/pg_hba.conf \
    && echo "listen_addresses='*'" >> /etc/postgresql/${PG_VERSION}/main/postgresql.conf \
    && service postgresql start \
    && su - postgres -c "psql -c \"CREATE USER admin PASSWORD '123';\"" \
    && su - postgres -c "psql -c 'ALTER USER admin CREATEDB;'" \
    && su - postgres -c "psql -c 'ALTER USER admin WITH SUPERUSER;'" \
    && service postgresql stop


# Clean up cache files
RUN rm -rf \
    /root/.cache \
    /root/.npm \
    /root/.pip \
    /usr/local/share/doc \
    /usr/share/doc \
    /usr/share/man \
    /var/lib/apt/lists/* \
    /tmp/*


RUN echo 'vm.overcommit_memory = 1' >> /etc/sysctl.conf

VOLUME [ "/mr-volumes" ]



COPY .env.example .env

COPY package*.json ./

RUN npm install --legacy-peer-deps

COPY . .

ARG NODE_ENV=production
ENV NODE_ENV=${NODE_ENV}


RUN npx prisma generate

RUN npm run build


EXPOSE 3000

# start postgres server , redis server & sync the db with schema & start the app
CMD service postgresql start && service redis-server start && npx prisma db push && npm start