{"_type":"export","__export_format":4,"__export_date":"2023-02-28T22:01:12.088Z","__export_source":"insomnia.desktop.app:v2022.7.0","resources":[{"_id":"req_9cc6b35ec13f41219c00f3ab65be8447","parentId":"fld_8372dd3c1e4b49f5acc14c3114f5772f","modified":1677621352721,"created":1677617960944,"url":"{{url}}/records","name":"get my medical records","description":"> this route gets user medical records\n\nit takes in request body 3 properties (all of them are optional)\n- take : number => how many medical records you want to get \n- skip : number => how many medical records you want to skip\n- doctor : boolean => do you want to get the information of the doctor or not (some times there is no doctor for the medical record)\n\n> take , skip can be used to implement pagination\n\n### if there is a doctor for a medical record and the doctor property is set to true : \n### we will get these properties from doctor :\n-   id,\n-   name,\n-   email,  can be null\n-   image_src, can be null (if the image_src is null show a default user image)\n-   medicalSpecialization\n\n","method":"GET","body":{"mimeType":"application/json","text":"{\n\t\n\t\"doctor\" : true,\n\t\"skip\": 0,\n\t\"take\" :1\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"bearer","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjZjMmZkZmRhLTg0ZjMtNGI2Yi1hMzQyLTcyNmM3NDJiM2QyNiIsIm5hdGlvbmFsSWQiOiIxMTExMTExMTExMTExMSIsIm5hbWUiOiJtb2hhbW1lZCIsImVtYWlsIjpudWxsLCJjcmVhdGVkQXQiOiIyMDIzLTAyLTI4VDIxOjQwOjI2LjMxMVoiLCJ1cGRhdGVkQXQiOiIyMDIzLTAyLTI4VDIxOjQwOjI2LjMxMVoiLCJnZW5kZXIiOiJNYWxlIiwiZG9iIjoiMjAwMS0wOS0yN1QwMDowMDowMC4wMDBaIiwiYXZnX21vbnRobHlfaW5jb21lIjpudWxsLCJ3ZWlnaHQiOm51bGwsImhlaWdodF9jbSI6bnVsbCwiaW1hZ2Vfc3JjIjoiL2ltYWdlcy9kZWZhdWx0X3BwLmpwZyIsIm1hcml0YWxTdGF0dXNJZCI6MSwiZWR1Y2F0aW9uYWxMZXZlbElkIjoxLCJlbXBsb3ltZW50U3RhdHVzSWQiOjEsIm1lZGljYWxTcGVjaWFsaXphdGlvbiI6bnVsbCwiaWF0IjoxNjc3NjIwODc2LCJleHAiOjE2NzgyMjU2NzZ9.pyb9nheWBEPJOhQA03AsUieNCuWVj_ewzU6pthFVUac"},"metaSortKey":-1677617960944,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_8372dd3c1e4b49f5acc14c3114f5772f","parentId":"wrk_c340159e867048968b0f469c14d43594","modified":1677617956304,"created":1677617956304,"name":"medical records","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1677617956304,"_type":"request_group"},{"_id":"wrk_c340159e867048968b0f469c14d43594","parentId":null,"modified":1677499339614,"created":1673131626819,"name":"medical records api docs v1","description":"","scope":"design","_type":"workspace"},{"_id":"req_10a4bfd0ede544b5bdbe651512c9f920","parentId":"fld_f4633144f54b4ee3bb9a1a2f4874186d","modified":1677530856292,"created":1674594077816,"url":"{{url}}/users/me","name":"Me (protected)","description":"this route is to get the logged in user profile info","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjJjMzYxZTQ3LTYyODAtNGI4Ni1hNDUyLTE0YTY1NmU1MjJkMyIsIm5hdGlvbmFsSWQiOiIxMTExMTExMTExMTExMSIsIm5hbWUiOiJtb2hhbW1lZCIsImVtYWlsIjoibW9oYW1tZWQxODIwMDExOEBnbWFpbC5jb20iLCJjcmVhdGVkQXQiOiIyMDIzLTAyLTI3VDE5OjMxOjM3Ljg5MFoiLCJ1cGRhdGVkQXQiOiIyMDIzLTAyLTI3VDE5OjUwOjQ2LjEwOVoiLCJnZW5kZXIiOiJNYWxlIiwiZG9iIjoiMjAwMS0wOS0yN1QwMDowMDowMC4wMDBaIiwiYXZnX21vbnRobHlfaW5jb21lIjo1NTUuNDUsIndlaWdodCI6IjkwIiwiaGVpZ2h0X2NtIjoiMTgwIiwiaW1hZ2Vfc3JjIjoiL2ltYWdlcy9kZWZhdWx0X3BwLmpwZyIsIm1hcml0YWxTdGF0dXNJZCI6MSwiZWR1Y2F0aW9uYWxMZXZlbElkIjoxLCJlbXBsb3ltZW50U3RhdHVzSWQiOjEsIm1lZGljYWxTcGVjaWFsaXphdGlvbiI6bnVsbCwiaWF0IjoxNjc3NTMwMjI2LCJleHAiOjE2NzgxMzUwMjZ9.ggiCZG8XgXh4gURyeEyNRQJwfmaUE8_nBCssapC3BHs"},"metaSortKey":-1673304456851,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_f4633144f54b4ee3bb9a1a2f4874186d","parentId":"wrk_c340159e867048968b0f469c14d43594","modified":1673360780156,"created":1673360780156,"name":"users","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1673360780156,"_type":"request_group"},{"_id":"req_2164edc8029d42f8a3d9cf0e0dbf90c6","parentId":"fld_f4633144f54b4ee3bb9a1a2f4874186d","modified":1677526296034,"created":1673304375419,"url":"{{url}}/users","name":"create user (dev)","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"nationalId\" : \"11111111111111\",\n\t\"password\" : \"123456\",\n\t\"name\" : \"mohammed\",\n\t\"gender\" : \"Male\",\n\t\"dob\" : \"2001-09-27\",\n\t\"maritalStatusId\" : 1,\n\t\"educationalLevelId\" :1,\n\t\"employmentStatusId\" : 1\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1673304456801,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_fa62cd9972744f05a5520fa637b936cc","parentId":"fld_f4633144f54b4ee3bb9a1a2f4874186d","modified":1677618081678,"created":1673304456751,"url":"{{url}}/users","name":"get all users (dev)","description":"","method":"GET","body":{"mimeType":"application/json","text":"{\n\t\"take\" : 5,\n\t\"skip\" : 0\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1673304456751,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_e704e6e8e7084b45984ba2c60f0d8c35","parentId":"fld_e3ba07a09ee64b86af4fe874ad870e84","modified":1677530226214,"created":1673131626825,"url":"{{url}}/auth/login","name":"login","description":"> the request body\n```json\n{\n\t\"nationalId\" : \"numeric string with 14 numbers (required)\",\n\t\"password\" : \"(required)\"\n}\n```\n\n> the response when success\n```js\n{\n\taccessToken : \"access token string\",\n\trefreshToken : \"refresh token string\",\n}\n\n```","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"nationalId\": \"11111111111111\",\n\t\"password\": \"123456\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1673131627025,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_e3ba07a09ee64b86af4fe874ad870e84","parentId":"wrk_c340159e867048968b0f469c14d43594","modified":1673363535752,"created":1673360722001,"name":"auth","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1673360722001,"_type":"request_group"},{"_id":"req_f97bdb5d2c8a4fd697957090fb50bf64","parentId":"fld_e3ba07a09ee64b86af4fe874ad870e84","modified":1673360765645,"created":1673306936429,"url":"{{url}}/auth/refresh","name":"refresh token","description":"> send the refresh token as Authorization header as a bearer token\n\nuse this route when you want to get a new access token,\nnote that when you call this route with some refresh token this refresh token becomes invalid\nand you get a new access token and also a new valid refresh token\n\n# the request header should be something like this : \n```json\n{\n\t\t\"Authorization\" : \"Bearer YOUR_REFRESH_TOKEN\"\n}\n```\n","method":"POST","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"","disabled":false},"metaSortKey":-1673131626975,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_afcdf49b1fe1406ca91c012dc2002afa","parentId":"fld_e3ba07a09ee64b86af4fe874ad870e84","modified":1673444448589,"created":1673305488026,"url":"{{url}}/auth/logout","name":"logout","description":"> send the access token as a bearer token as Authorization header\n\nthis route will make the refreshToken not valid anymore\nand it will return ```true``` when the request is completed","method":"POST","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"","disabled":false},"metaSortKey":-1673131626950,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_6f34770667df477c8471c4cae5af1e95","parentId":"fld_e3ba07a09ee64b86af4fe874ad870e84","modified":1673444472103,"created":1673308821058,"url":"{{url}}/protected","name":"protected route (dev)","description":"# this route is for testing the authorization \n\n> the request header should be something like this\n```json\n{\n\t\"Authorization\" : \"Bearer YOUR_ACCESS_TOKEN\"\n}\n```","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"","disabled":false},"metaSortKey":-1673131626925,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"env_b1e49df26fa2a97480ba4782058c4cce4ed3adf5","parentId":"wrk_c340159e867048968b0f469c14d43594","modified":1673131626822,"created":1673131626822,"name":"Base Environment","data":{},"dataPropertyOrder":null,"color":null,"isPrivate":false,"metaSortKey":1673131626822,"_type":"environment"},{"_id":"jar_97e0b2c780474d43e7407f0fe5ad3b3342079215","parentId":"wrk_c340159e867048968b0f469c14d43594","modified":1673131626823,"created":1673131626823,"name":"Default Jar","cookies":[],"_type":"cookie_jar"},{"_id":"spc_11fefe9c5b8c43389b855cf24fd73f16","parentId":"wrk_c340159e867048968b0f469c14d43594","modified":1677499339613,"created":1673131626819,"fileName":"medical records api docs v1","contents":"","contentType":"yaml","_type":"api_spec"},{"_id":"uts_37607a83563e49deb609f578db791c5a","parentId":"wrk_c340159e867048968b0f469c14d43594","modified":1673131626826,"created":1673131626826,"name":"Example Test Suite","_type":"unit_test_suite"},{"_id":"env_79f24b53e7e64613b120f58bea290936","parentId":"env_b1e49df26fa2a97480ba4782058c4cce4ed3adf5","modified":1676502123952,"created":1673359060816,"name":"development","data":{"url":"http://localhost:3000/api/v1"},"dataPropertyOrder":{"&":["url"]},"color":null,"isPrivate":false,"metaSortKey":1673359060816,"_type":"environment"},{"_id":"env_83db92ff674f4b7b9483b457cecaae44","parentId":"env_b1e49df26fa2a97480ba4782058c4cce4ed3adf5","modified":1676502133377,"created":1673359090504,"name":"production","data":{"url":"https://medical-records-server1.onrender.com/api/v1"},"dataPropertyOrder":{"&":["url"]},"color":null,"isPrivate":false,"metaSortKey":1673359060866,"_type":"environment"}]}